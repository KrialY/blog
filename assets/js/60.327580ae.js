(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{442:function(v,_,t){"use strict";t.r(_);var s=t(33),r=Object(s.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h3",{attrs:{id:"什么是-前端工程化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-前端工程化"}},[v._v("#")]),v._v(' 什么是"前端工程化"？')]),v._v(" "),t("p",[v._v('目前来说，web业务日益复杂化和多元化，前端开发从WebPage模式为主转变为WebApp模式为主了。前端的开发工作在一些场景下被认为只是日常的一项简单工作，或只是某个项目的"附属品"，并没有被当做一个"软件"而认真对待（无论是产品负责人还是开发者）。')]),v._v(" "),t("p",[v._v("在模式的转变下，前端都已经不是过去的拼几个页面和搞几个jq插件就能完成。当工程复杂就会产生许多问题，比如：")]),v._v(" "),t("ul",[t("li",[v._v("如何进行高效的多人协作？")]),v._v(" "),t("li",[v._v("如何保证项目的可维护性？")]),v._v(" "),t("li",[v._v("如何提高项目的开发质量？")]),v._v(" "),t("li",[v._v("如何降低项目生产的风险？")]),v._v(" "),t("li",[v._v("...")])]),v._v(" "),t("p",[t("strong",[v._v("前端工程化")]),v._v("是使用软件工程的技术和方法来进行前端的开发流程、技术、工具、经验等规范化、标准化，其主要目的*"),t("strong",[v._v("为了提高效率和降低成本，即提高开发过程中的开发效率，减少不必要的重复工作时间*")]),v._v("，而前端工程本质上是软件工程的一种，因此我们应该从软件工程的角度来研究前端工程。")]),v._v(" "),t("p",[v._v('"前端工程化"里面的工程指'),t("strong",[v._v("软件工程")]),v._v("，和我们一般说的"),t("strong",[v._v("工程")]),v._v("是两个完全不同的概念。")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("工程")]),v._v("是个很泛泛的概念，甚至可以认为建了一个git仓库就相对于新建了一个工程；")]),v._v(" "),t("li",[t("strong",[v._v("软件工程")]),v._v('的定义是: "应用计算机科学理论和技术以及工程管理原则和方法，按预算和进度，实现满足用户要求的软件产品的定义、开发、和维护的工程或进行研究的学科"（GB/T11457-2006《信息技术 软件工程术语》）。')])]),v._v(" "),t("h3",{attrs:{id:"如何做-前端工程化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何做-前端工程化"}},[v._v("#")]),v._v(' 如何做"前端工程化"？')]),v._v(" "),t("p",[v._v("前端工程化就是为了让前端开发能够“自成体系”，个人认为主要应该从"),t("strong",[v._v("模块化")]),v._v("、"),t("strong",[v._v("组件化")]),v._v("、"),t("strong",[v._v("规范化")]),v._v("、"),t("strong",[v._v("自动化")]),v._v("四个方面思考。")]),v._v(" "),t("h4",{attrs:{id:"模块化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[v._v("#")]),v._v(" 模块化")]),v._v(" "),t("blockquote",[t("p",[v._v("简单来说，模块化就是将一个大文件拆分成相互依赖的小文件，再进行统一的拼装和加载。")])]),v._v(" "),t("ul",[t("li",[t("h5",{attrs:{id:"js的模块化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js的模块化"}},[v._v("#")]),v._v(" JS的模块化")]),v._v(" "),t("p",[v._v("在ES6之前，JavaScript一直没有模块系统，这对开发大型复杂的前端工程造成了巨大的障碍。对此社区制定了一些模块加载方案，如CommonJS、AMD和CMD等。")]),v._v(" "),t("p",[v._v("现在ES6已经在语言层面上规定了模块系统，完全可以取代现有的CommonJS和AMD规范，而且使用起来相当简洁，并且有静态加载的特性。")]),v._v(" "),t("ol",[t("li",[v._v("用++Webpack + Babel++将所有模块打包成一个文件同步加载，也可以搭乘多个chunk异步加载；")]),v._v(" "),t("li",[v._v("用++System+Babel++主要是分模块异步加载；")]),v._v(" "),t("li",[v._v("用浏览器的"),t("script",{attrs:{type:"module"}})])])])])])}),[],!1,null,null,null);_.default=r.exports}}]);